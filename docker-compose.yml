version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - internal_net

  kafka:
    image: bitnami/kafka:3.6.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - internal_net

  spark-master:
    image: bitnami/spark:3.4.1
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - internal_net

  spark-worker:
    image: bitnami/spark:3.4.1
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    networks:
      - internal_net

  spark-submit:
    image: bitnami/spark:3.4.1
    container_name: spark-submit
    user: root
    depends_on:
      - spark-master
      - spark-worker
    volumes:
      - ./spark:/opt/spark-apps
      - ./ivy2:/root/.ivy2
    networks:
      - internal_net
    entrypoint: ["sleep", "infinity"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - ./data/esdata:/usr/share/elasticsearch/data
    networks:
      - internal_net

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./data/db:/data/db
    env_file:
      - .env
    networks:
      - internal_net

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./pg-init.sql:/docker-entrypoint-initdb.d/pg_init.sql:ro
      - ./data/sql:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - internal_net

  ubuntu:
    build: .
    container_name: ubuntu
    command: ["sleep", "infinity"]
    networks:
      - internal_net
    volumes:
      - ./scripts:/scripts
      - ./Crawlers/crawler_0:/app
    stdin_open: true
    tty: true

networks:
  internal_net:
    driver: bridge
